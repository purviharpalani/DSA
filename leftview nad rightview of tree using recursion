
#include<bits/stdc++.h>

using namespace std;

struct Node{
    Node* left;
    int data;
    Node* right;
    
    Node(int val){
        data = val;
        left = right = NULL;
    }
};

void rightview(Node* node, int level, vector<int> &ans){
    if(node == NULL) return;
    if(level == ans.size()) ans.push_back(node->data);
    rightview(node->right, level+1,ans);
    rightview(node->left, level+1,ans);
}

void leftview(Node* node, int level, vector<int> &ans){
    if(node == NULL) return;
    if(level == ans.size()) ans.push_back(node->data);
    leftview(node->left, level+1,ans);
    leftview(node->right, level+1,ans);
}
    
int main()
{
    struct Node* root = new Node(1);
    root->left = new Node(2);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->left->right->left = new Node(6);
    root->right = new Node(3);
    root->right->right=new Node(7);
    vector<int> lv, rv;
    rightview(root,0, rv);
    leftview(root,0, lv);
    
    cout<<"Left view:"<<endl;
    for(auto i:lv)
    cout<<i<<" ";
    
    cout<<endl<<"Right view:"<<endl;
    for(auto i: rv)
    cout<<i<<" ";
    
    return 0;
    
}
