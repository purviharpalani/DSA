#include<bits/stdc++.h>

using namespace std;

struct Node{
    Node* left;
    int data;
    Node* right;
    
    Node(int val){
        data = val;
        left = right = NULL;
    }
};

vector<int> topView(Node* root){
    map <int, int> mp;
    vector<int> ans;
    if(root==NULL) return ans;
    
    queue<pair<Node*, int>> q;
    Node* node;
    
    q.push({root,0});
    while(!q.empty()){
        auto it = q.front();
        q.pop();
        node = it.first;
        int line = it.second;
        if(mp.find(line)==mp.end()) mp[line] = node->data;
        if(node->left) q.push({node->left, line-1});
        if(node->right) q.push({node->right, line+1});
    }
    
    for(auto it : mp){
        ans.push_back(it.second);
    }
    return ans;
    
}

int main()
{
    struct Node* root = new Node(1);
    root->left = new Node(2);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->left->right->left = new Node(6);
    root->right = new Node(3);
    root->right->right=new Node(7);
    vector<int> ans = topView(root);
    for(int i : ans){
        cout<<i<<" ";
    }
    
    return 0;
    
}
