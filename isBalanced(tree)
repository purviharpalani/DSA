#include <iostream>
#include <bits/stdc++.h>

using namespace std;

struct node{
	struct node *left;
	int data;
	struct node *right;
	
	node(int val){
	    data=val;
	    left = right = NULL;
	}
};



int check(node *root){
    if(root==NULL) return 0;
    
    int lh = check(root->left);
    int rh = check(root->right);
    if((lh == -1) || (rh == -1)) return -1;
    if(abs(lh-rh)>1) return -1;
    return 1+max(lh,rh);
}

bool isBalanced(node* root){
    if(check(root)!= -1) return true;
    else return false;
}

int main()
{
    struct node* root = new node(1);
    root->left = new node(2);
    root->left->left = new node(3);
    root->right = new node(7);
    root->left->right = new node(4);
    root->left->right->left = new node(5);
    root->left->right->right = new node(6);
    
    if(isBalanced(root)==0) cout<<"The tree is not balanced";
    else cout<<"The tree is balanced";

    return 0;
}
