
#include <iostream>
#include <bits/stdc++.h>

using namespace std;

struct node{
	struct node *left;
	int data;
	struct node *right;
	
	node(int val){
	    data=val;
	    left = right = NULL;
	}
};

int height(node *root, int &maxi){
    if(root==NULL) return 0;
    
    int lh = height(root->left, maxi);
    int rh = height(root->right, maxi);
    
    maxi = max(maxi, lh+rh);
    
    return 1+max(lh,rh);
}

int diameter(node *root){
    int maxi = 0;
    height(root, maxi);
    return maxi;
}

int main()
{
    struct node* root = new node(1);
    root->left = new node(2);
    // root->left->left = new node(3);
    root->right = new node(3);
    // root->left->right = new node(4);
    // root->left->right->left = new node(5);
    root->right->left = new node(4);
    root->right->left->left = new node(5);
    root->right->left->left->left = new node(9);
    root->right->right = new node(6);
    root->right->right->right = new node(7);
    root->right->right->right->right = new node(8);
    
    cout<<diameter(root);
    // if(isBalanced(root)==0) cout<<"The tree is not balanced";
    // else cout<<"The tree is balanced";

    return 0;
}
